@import url('https://fonts.googleapis.com/css2?family=Orbitron&display=swap');

body {
  background: url('9447453515_d6e39ed56b_o.jpg') no-repeat center center fixed; 
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
  font-family: 'Orbitron', sans-serif;
  color: #453c35;
}

nav {
  background-color: #91b697;
  padding: 10px;
  text-align: center;
  border-radius: 20px;
}

nav ul {
  list-style-type: none;
  padding: 0;
}

nav ul li {
  display: inline;
  margin: 0 15px;
}

nav ul li a {
  color: #c2d199;
  text-decoration: none;
  transition: color 0.2s ease-in-out;
}

nav ul li a:hover {
  color: #f1c65d;
}

h1 {
  font-size: 3em;
  color: #c2d199;
  text-shadow: 2px 2px 4px #69a1bf;
  padding: 15px 0;
  text-align: center;
}

article {
  background-color: #c4d9e2;
  border: 2px solid #d57471;
  border-radius: 20px;
  padding: 15px;
  margin: 15px;
  transition: transform 0.3s ease-in-out;
}

article:hover {
  transform: scale(1.02);
}

article h2 {
  border-bottom: 1px solid #69a1bf;
  padding-bottom: 10px;
}

article p {
  font-size: 1em;
  line-height: 1.5;
  color: #ae5d5a;
}

#about {
  background-color: #c2d199;
  padding: 15px;
  border-radius: 20px;
  margin: 15px;
  color: #453c35;
}

#about .about-content {
  position: relative;
}

.about-text {
  background-color: #c2d199;
  padding: 15px;
  border-radius: 20px;
}

.about-img-wrapper {
  position: absolute;
  right: -20px;
  border: 3px solid #69a1bf;
  border-radius: 10px;
}

.about-img-wrapper:first-child {
  top: 0; 
}

.about-img-wrapper:last-child {
  top: 50px;
}

#audioPlayer {
  position: fixed;
  bottom: 0;
  width: 100%;
}

.player-controls {
  position: fixed;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  justify-content: space-around;
  width: 200px;
  background-color: #91b697;
  padding: 10px;
  border-radius: 20px;
}

.control-button {
  background-color: #c2d199;
  border: none;
  padding: 10px;
  border-radius: 10px;
  color: #453c35;
  font-family: 'Orbitron', sans-serif;
  cursor: pointer;
  transition: background-color 0.2s ease-in-out;
}

.control-button:hover {
  background-color: #f1c65d;
}

// get the elements from the DOM
let showModal = document.getElementById('showModal');
let modalContainer = document.getElementById('modalContainer');
let modal = document.getElementById('modal');
let modalImage = document.getElementById('modalImage');
let modalText = document.getElementById('modalText');
let features = [
    { 
        "image": "feature1.jpg",
        "description": "This is feature 1."
    },
    { 
        "image": "feature2.jpg",
        "description": "This is feature 2."
    }
    // add more feature objects here...
];

showModal.addEventListener('click', () => {
    // generate a random index within the range of the features array
    let index = Math.floor(Math.random() * features.length);

    // set the image and text in the modal based on the random feature
    modalImage.src = features[index].image;
    modalText.innerText = features[index].description;

    // show the modal
    modalContainer.style.display = 'flex';
});

modalContainer.addEventListener('click', (event) => {
    // if the click event happened on the modalContainer itself (and not a child element),
    // or on the overlay, hide the modal
    if (event.target == modalContainer || event.target.id == 'overlay') {
        modalContainer.style.display = 'none';
    }
});
